<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\RVM.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\RVM.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Tue Oct 25 14:42:33 2022
<BR><P>
<H3>Maximum Stack Usage =        160 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; RVM_Boot_Kobj_Init &rArr; RVM_Virt_Crt &rArr; _RVM_Virt_Switch &rArr; RVM_Print_Int
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[7]">_RVM_Entry</a>
 <LI><a href="#[3]">_RVM_Jmp_Stub</a>
 <LI><a href="#[8]">RVM_Inv_Act</a>
 <LI><a href="#[9]">RVM_Inv_Ret</a>
 <LI><a href="#[a]">RVM_Thd_Sched_Rcv</a>
 <LI><a href="#[b]">RVM_Svc</a>
 <LI><a href="#[c]">RVM_A7M_Svc_Kern</a>
 <LI><a href="#[d]">_RVM_MSB_Get</a>
 <LI><a href="#[e]">__user_setup_stackheap</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">RVM_Sftd</a> from rvm_hyper.o(.text.RVM_Sftd) referenced 2 times from rvm_init.o(.text.main)
 <LI><a href="#[4]">RVM_Timd</a> from rvm_hyper.o(.text.RVM_Timd) referenced 2 times from rvm_init.o(.text.main)
 <LI><a href="#[6]">RVM_Vctd</a> from rvm_hyper.o(.text.RVM_Vctd) referenced 2 times from rvm_init.o(.text.main)
 <LI><a href="#[5]">RVM_Vmmd</a> from rvm_hyper.o(.text.RVM_Vmmd) referenced 2 times from rvm_init.o(.text.main)
 <LI><a href="#[3]">_RVM_Jmp_Stub</a> from rvm_platform_a7m_asm.o(ARCH) referenced 8 times from rvm_init.o(.text.main)
 <LI><a href="#[0]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from rvm_platform_a7m_asm.o(ARCH)
 <LI><a href="#[1]">main</a> from rvm_init.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[7]"></a>_RVM_Entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rvm_platform_a7m_asm.o(ARCH), UNUSED, KEPT)

<P><STRONG><a name="[3]"></a>_RVM_Jmp_Stub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rvm_platform_a7m_asm.o(ARCH))
<BR>[Address Reference Count : 1]<UL><LI> rvm_init.o(.text.main)
</UL>
<P><STRONG><a name="[8]"></a>RVM_Inv_Act</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rvm_platform_a7m_asm.o(ARCH), UNUSED, KEPT)

<P><STRONG><a name="[9]"></a>RVM_Inv_Ret</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rvm_platform_a7m_asm.o(ARCH), UNUSED, KEPT)

<P><STRONG><a name="[a]"></a>RVM_Thd_Sched_Rcv</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rvm_platform_a7m_asm.o(ARCH))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sftd
</UL>

<P><STRONG><a name="[b]"></a>RVM_Svc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rvm_platform_a7m_asm.o(ARCH))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Rcv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Snd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Free
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Prio
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Inv_Set
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Hyp_Set
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Time_Xfer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Exec_Set
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Bind
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Pgtbl_Add
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Pgtbl_Con
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Captbl_Kern
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Captbl_Add
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Inv_Crt
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Proc_Crt
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Pgtbl_Crt
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Crt
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Crt
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Captbl_Crt
</UL>

<P><STRONG><a name="[c]"></a>RVM_A7M_Svc_Kern</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rvm_platform_a7m_asm.o(ARCH))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Print_Regs
</UL>

<P><STRONG><a name="[d]"></a>_RVM_MSB_Get</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rvm_platform_a7m_asm.o(ARCH))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vctd
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
</UL>

<P><STRONG><a name="[e]"></a>__user_setup_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rvm_platform_a7m_asm.o(ARCH), UNUSED, KEPT)

<P><STRONG><a name="[0]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> rvm_platform_a7m_asm.o(ARCH)
</UL>
<P><STRONG><a name="[41]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[14]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[42]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[43]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[44]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[45]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[46]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[12]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[11]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Clear
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Clear
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[13]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[10]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[4a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[15]"></a>RVM_Boot_Kobj_Crt</STRONG> (Thumb, 6344 bytes, Stack size 40 bytes, rvm_boot.o(.text.RVM_Boot_Kobj_Crt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = RVM_Boot_Kobj_Crt &rArr; RVM_Boot_Thd_Crt &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Inv_Crt
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Proc_Crt
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Pgtbl_Crt
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Crt
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Uint
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Captbl_Crt
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Thd_Crt
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>RVM_Boot_Kobj_Init</STRONG> (Thumb, 8272 bytes, Stack size 48 bytes, rvm_boot.o(.text.RVM_Boot_Kobj_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = RVM_Boot_Kobj_Init &rArr; RVM_Virt_Crt &rArr; _RVM_Virt_Switch &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Inv_Set
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Hyp_Set
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Time_Xfer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Exec_Set
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Stack_Init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Bind
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Pgtbl_Add
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Pgtbl_Con
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Captbl_Kern
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Captbl_Add
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>RVM_Boot_Post_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rvm_user.o(.text.RVM_Boot_Post_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>RVM_Boot_Pre_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rvm_user.o(.text.RVM_Boot_Pre_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>RVM_Boot_Thd_Crt</STRONG> (Thumb, 996 bytes, Stack size 24 bytes, rvm_boot.o(.text.RVM_Boot_Thd_Crt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = RVM_Boot_Thd_Crt &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Crt
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Uint
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Captbl_Crt
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
</UL>

<P><STRONG><a name="[21]"></a>RVM_Captbl_Add</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Captbl_Add))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[17]"></a>RVM_Captbl_Crt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Captbl_Crt))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Thd_Crt
</UL>

<P><STRONG><a name="[22]"></a>RVM_Captbl_Kern</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rvm_syssvc.o(.text.RVM_Captbl_Kern))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = RVM_Captbl_Kern
</UL>
<BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[2d]"></a>RVM_Clear</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, rvm_init.o(.text.RVM_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RVM_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
</UL>

<P><STRONG><a name="[2f]"></a>RVM_Idle</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, rvm_platform_a7m.o(.text.RVM_Idle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = RVM_Idle
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>RVM_Inv_Crt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Inv_Crt))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
</UL>

<P><STRONG><a name="[2a]"></a>RVM_Inv_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Inv_Set))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[19]"></a>RVM_Kern_Act</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Kern_Act))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Print_Regs
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Send_Virt_Vects
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Virt_Switch
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Idle
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vctd
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sftd
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Thd_Crt
</UL>

<P><STRONG><a name="[3c]"></a>RVM_List_Crt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_List_Crt))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
</UL>

<P><STRONG><a name="[39]"></a>RVM_List_Del</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_List_Del))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
</UL>

<P><STRONG><a name="[3a]"></a>RVM_List_Ins</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_List_Ins))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Send_Virt_Vects
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Wheel_Ins
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
</UL>

<P><STRONG><a name="[24]"></a>RVM_Pgtbl_Add</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rvm_syssvc.o(.text.RVM_Pgtbl_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = RVM_Pgtbl_Add
</UL>
<BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[23]"></a>RVM_Pgtbl_Con</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Pgtbl_Con))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[1c]"></a>RVM_Pgtbl_Crt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rvm_syssvc.o(.text.RVM_Pgtbl_Crt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = RVM_Pgtbl_Crt
</UL>
<BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
</UL>

<P><STRONG><a name="[18]"></a>RVM_Print_Int</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, rvm_syssvc.o(.text.RVM_Print_Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Print_Regs
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Send_Virt_Vects
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Virt_Switch
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vctd
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sftd
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Thd_Crt
</UL>

<P><STRONG><a name="[16]"></a>RVM_Print_String</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, rvm_syssvc.o(.text.RVM_Print_String))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RVM_Print_String
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Print_Regs
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Print_Fault
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Send_Virt_Vects
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Virt_Switch
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vctd
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sftd
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Thd_Crt
</UL>

<P><STRONG><a name="[1a]"></a>RVM_Print_Uint</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, rvm_syssvc.o(.text.RVM_Print_Uint))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RVM_Print_Uint
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Print_Regs
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sftd
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Thd_Crt
</UL>

<P><STRONG><a name="[1d]"></a>RVM_Proc_Crt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Proc_Crt))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
</UL>

<P><STRONG><a name="[30]"></a>RVM_Putchar</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rvm_platform_a7m.o(.text.RVM_Putchar))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Uint
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>

<P><STRONG><a name="[2]"></a>RVM_Sftd</STRONG> (Thumb, 1412 bytes, Stack size 8 bytes, rvm_hyper.o(.text.RVM_Sftd))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = RVM_Sftd &rArr; RVM_Thd_Print_Regs &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Print_Regs
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Print_Fault
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Rcv
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Rcv
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Uint
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rvm_init.o(.text.main)
</UL>
<P><STRONG><a name="[1b]"></a>RVM_Sig_Crt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Sig_Crt))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
</UL>

<P><STRONG><a name="[31]"></a>RVM_Sig_Rcv</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Sig_Rcv))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vctd
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sftd
</UL>

<P><STRONG><a name="[35]"></a>RVM_Sig_Snd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Sig_Snd))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Send_Virt_Vects
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
</UL>

<P><STRONG><a name="[26]"></a>RVM_Stack_Init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rvm_platform_a7m.o(.text.RVM_Stack_Init))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[2c]"></a>RVM_Thd_Crt</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rvm_syssvc.o(.text.RVM_Thd_Crt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = RVM_Thd_Crt
</UL>
<BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Thd_Crt
</UL>

<P><STRONG><a name="[27]"></a>RVM_Thd_Exec_Set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Thd_Exec_Set))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[29]"></a>RVM_Thd_Hyp_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Thd_Hyp_Set))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[32]"></a>RVM_Thd_Print_Fault</STRONG> (Thumb, 408 bytes, Stack size 16 bytes, rvm_platform_a7m.o(.text.RVM_Thd_Print_Fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RVM_Thd_Print_Fault &rArr; RVM_Print_String
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sftd
</UL>

<P><STRONG><a name="[33]"></a>RVM_Thd_Print_Regs</STRONG> (Thumb, 1824 bytes, Stack size 48 bytes, rvm_platform_a7m.o(.text.RVM_Thd_Print_Regs))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = RVM_Thd_Print_Regs &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_A7M_Svc_Kern
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Uint
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sftd
</UL>

<P><STRONG><a name="[25]"></a>RVM_Thd_Sched_Bind</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Thd_Sched_Bind))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[36]"></a>RVM_Thd_Sched_Free</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Thd_Sched_Free))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
</UL>

<P><STRONG><a name="[37]"></a>RVM_Thd_Sched_Prio</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Thd_Sched_Prio))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Virt_Switch
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
</UL>

<P><STRONG><a name="[28]"></a>RVM_Thd_Time_Xfer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rvm_syssvc.o(.text.RVM_Thd_Time_Xfer))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Svc
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[4]"></a>RVM_Timd</STRONG> (Thumb, 1096 bytes, Stack size 8 bytes, rvm_hyper.o(.text.RVM_Timd))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = RVM_Timd &rArr; RVM_Thd_Print_Regs &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_MSB_Get
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Print_Regs
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Virt_Switch
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Rcv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Snd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Ins
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Del
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rvm_init.o(.text.main)
</UL>
<P><STRONG><a name="[6]"></a>RVM_Vctd</STRONG> (Thumb, 740 bytes, Stack size 8 bytes, rvm_hyper.o(.text.RVM_Vctd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = RVM_Vctd &rArr; _RVM_Send_Virt_Vects &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_MSB_Get
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Send_Virt_Vects
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Virt_Switch
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Rcv
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rvm_init.o(.text.main)
</UL>
<P><STRONG><a name="[2b]"></a>RVM_Virt_Crt</STRONG> (Thumb, 684 bytes, Stack size 48 bytes, rvm_hyper.o(.text.RVM_Virt_Crt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = RVM_Virt_Crt &rArr; _RVM_Virt_Switch &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_MSB_Get
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Virt_Switch
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Ins
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Crt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Prio
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Clear
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Uint
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
</UL>

<P><STRONG><a name="[3d]"></a>RVM_Virt_Init</STRONG> (Thumb, 920 bytes, Stack size 16 bytes, rvm_hyper.o(.text.RVM_Virt_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RVM_Virt_Init &rArr; RVM_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Ins
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Crt
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>RVM_Vmmd</STRONG> (Thumb, 1732 bytes, Stack size 8 bytes, rvm_hyper.o(.text.RVM_Vmmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = RVM_Vmmd &rArr; _RVM_Send_Virt_Vects &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_MSB_Get
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Send_Virt_Vects
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Virt_Switch
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Rcv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Snd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Ins
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Del
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Prio
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rvm_init.o(.text.main)
</UL>
<P><STRONG><a name="[1]"></a>main</STRONG> (Thumb, 3664 bytes, Stack size 8 bytes, rvm_init.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = main &rArr; RVM_Boot_Kobj_Init &rArr; RVM_Virt_Crt &rArr; _RVM_Virt_Switch &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Idle
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Prio
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Post_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Pre_Init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Time_Xfer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Exec_Set
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Stack_Init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Bind
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Crt
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Boot_Kobj_Crt
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Crt
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Uint
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4b]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[4d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[34]"></a>_RVM_Recover_Cur_Virt</STRONG> (Thumb, 1318 bytes, Stack size 24 bytes, rvm_hyper.o(.text._RVM_Recover_Cur_Virt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _RVM_Recover_Cur_Virt &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Wheel_Ins
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Free
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Ins
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Del
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Clear
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Time_Xfer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Exec_Set
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Stack_Init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Bind
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sftd
</UL>

<P><STRONG><a name="[3e]"></a>_RVM_Wheel_Ins</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, rvm_hyper.o(.text._RVM_Wheel_Ins))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RVM_Wheel_Ins
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Ins
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RVM_Recover_Cur_Virt
</UL>

<P><STRONG><a name="[38]"></a>_RVM_Virt_Switch</STRONG> (Thumb, 554 bytes, Stack size 24 bytes, rvm_hyper.o(.text._RVM_Virt_Switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _RVM_Virt_Switch &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Thd_Sched_Prio
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vctd
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Timd
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Virt_Crt
</UL>

<P><STRONG><a name="[3b]"></a>_RVM_Send_Virt_Vects</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, rvm_hyper.o(.text._RVM_Send_Virt_Vects))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _RVM_Send_Virt_Vects &rArr; RVM_Print_Int
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Sig_Snd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_List_Ins
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Kern_Act
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_Int
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Print_String
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vctd
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVM_Vmmd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
