


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************
    2 00000000         ;Filename    : rmp_platform_a7m_rvm_asm.s
    3 00000000         ;Author      : pry
    4 00000000         ;Date        : 09/02/2018
    5 00000000         ;Description : The assembly part of the RMP RTOS for the
                        RVM virtual machine.
    6 00000000         ;*******************************************************
                       **********************/
    7 00000000         
    8 00000000         ;/* The ARM Cortex-M Architecture **********************
                       ***********************
    9 00000000         ;R0-R7:General purpose registers that are accessible. 
   10 00000000         ;R8-R12:General purpose registers that can only be reach
                       ed by 32-bit instructions.
   11 00000000         ;R13:SP/SP_process/SP_main    Stack pointer
   12 00000000         ;R14:LR                       Link Register(used for ret
                       urning from a subfunction)
   13 00000000         ;R15:PC                       Program counter.
   14 00000000         ;IPSR                         Interrupt Program Status R
                       egister.
   15 00000000         ;APSR                         Application Program Status
                        Register.
   16 00000000         ;EPSR                         Execute Program Status Reg
                       ister.
   17 00000000         ;The above 3 registers are saved into the stack in combi
                       nation(xPSR).
   18 00000000         ;The ARM Cortex-M4/7 also include a FPU.
   19 00000000         ;*******************************************************
                       **********************/
   20 00000000         
   21 00000000         ;/* Begin Header ***************************************
                       **********************/
   22 00000000         ;2^3=8 byte alignment.        
   23 00000000                 AREA             INIT,CODE,READONLY,ALIGN=3
   24 00000000         
   25 00000000                 THUMB
   26 00000000                 REQUIRE8
   27 00000000                 PRESERVE8
   28 00000000         ;/* End Header *****************************************
                       **********************/
   29 00000000         
   30 00000000         ;/* Begin Exports **************************************
                       **********************/
   31 00000000         ;Get the MSB                              
   32 00000000                 EXPORT           RMP_MSB_Get
   33 00000000         ;Start the first thread
   34 00000000                 EXPORT           _RMP_Start
   35 00000000         ;/* End Exports ****************************************
                       **********************/
   36 00000000         
   37 00000000         ;/* Begin Function:RMP_MSB_Get *************************
                       ***********************
   38 00000000         ;Description : Get the MSB of the word.
   39 00000000         ;Input       : rmp_ptr_t R0 - The value.
   40 00000000         ;Output      : None.
   41 00000000         ;Return      : rmp_ptr_t R0 - The MSB position.
   42 00000000         ;*******************************************************
                       **********************/



ARM Macro Assembler    Page 2 


   43 00000000         RMP_MSB_Get
   44 00000000 FAB0 F180       CLZ              R1,R0
   45 00000004 F04F 001F       MOV              R0,#31
   46 00000008 EBA0 0001       SUB              R0,R1
   47 0000000C 4770            BX               LR
   48 0000000E         ;/* End Function:RMP_MSB_Get ***************************
                       **********************/
   49 0000000E         
   50 0000000E         ;/* Begin Function:_RMP_Start **************************
                       ***********************
   51 0000000E         ;Description : Jump to the user function and will never 
                       return from it.
   52 0000000E         ;Input       : None.
   53 0000000E         ;Output      : None.
   54 0000000E         ;Return      : None.
   55 0000000E         ;*******************************************************
                       **********************/
   56 0000000E         _RMP_Start
   57 0000000E         ;Should never reach here
   58 0000000E F1A1 0110       SUB              R1,#16      ; This is how we pu
                                                            sh our registers so
                                                             move forward
   59 00000012 468D            MOV              SP,R1       ; Set the stack poi
                                                            nter
   60 00000014         
   61 00000014 F3BF 8F6F       ISB                          ; Instruction barri
                                                            er
   62 00000018 4780            BLX              R0          ; Branch to our tar
                                                            get
   63 0000001A 00 00           ALIGN
   64 0000001C         ;/* End Function:_RMP_Start ****************************
                       **********************/
   65 0000001C         
   66 0000001C                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\rmp_platform_a7m_rvm_asm.d -o.\objects\rmp_platform_a
7m_rvm_asm.o -I../Source -I../Include -I../Guest/M5P1_MuProkaron/MProkaron/Incl
ude -I. -I.\RTE\_Virt1 -ID:\Program_Files_x86\Keil_v5\Packs\Keil\STM32F4xx_DFP\
2.14.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Program_Files_x86\Keil_v5
\ARM\CMSIS\Include --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSI
ON SETA 528" --predefine="STM32F405xx SETA 1" --list=.\listings\rmp_platform_a7
m_rvm_asm.lst ../Guest/M5P1_MuProkaron/MProkaron/Platform/A7M_RVM/rmp_platform_
a7m_rvm_asm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

INIT 00000000

Symbol: INIT
   Definitions
      At line 23 in file ../Guest/M5P1_MuProkaron/MProkaron/Platform/A7M_RVM/rm
p_platform_a7m_rvm_asm.s
   Uses
      None
Comment: INIT unused
RMP_MSB_Get 00000000

Symbol: RMP_MSB_Get
   Definitions
      At line 43 in file ../Guest/M5P1_MuProkaron/MProkaron/Platform/A7M_RVM/rm
p_platform_a7m_rvm_asm.s
   Uses
      At line 32 in file ../Guest/M5P1_MuProkaron/MProkaron/Platform/A7M_RVM/rm
p_platform_a7m_rvm_asm.s
Comment: RMP_MSB_Get used once
_RMP_Start 0000000E

Symbol: _RMP_Start
   Definitions
      At line 56 in file ../Guest/M5P1_MuProkaron/MProkaron/Platform/A7M_RVM/rm
p_platform_a7m_rvm_asm.s
   Uses
      At line 34 in file ../Guest/M5P1_MuProkaron/MProkaron/Platform/A7M_RVM/rm
p_platform_a7m_rvm_asm.s
Comment: _RMP_Start used once
3 symbols
337 symbols in table
